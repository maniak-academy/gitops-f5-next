name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2  # Use v2 for now

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Send POST request and get token
        run: |
          RESPONSE=$(curl -s -k -X POST "https://${{ secrets.F5_ADDRESS }}/api/login" -H "Content-Type: application/json" -d '{"username":"${{ secrets.F5_LOGIN }}", "password":"${{ secrets.F5_PASSWORD }}"}')
          ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.access_token')
          REFRESH_TOKEN=$(echo $RESPONSE | jq -r '.refresh_token')
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
          echo "REFRESH_TOKEN=$REFRESH_TOKEN" >> $GITHUB_ENV

      - name: Use the tokens in subsequent steps
        run: |
          echo "Access Token: $ACCESS_TOKEN"
          echo "Refresh Token: $REFRESH_TOKEN"

      - name: Use the token
        run: |
          curl -s -k -H "Authorization: Bearer $ACCESS_TOKEN" "https://${{ secrets.F5_ADDRESS }}/api/v1/spaces/default/instances"

      - name: Create App Documents from Payloads in Apps Folder
        run: |
          for file in apps/*.json; do
            RESPONSE=$(curl -s -k -X POST -H "Authorization: Bearer $ACCESS_TOKEN" "https://${{ secrets.F5_ADDRESS }}/api/v1/spaces/default/appsvcs/documents" -H "Content-Type: application/json" -d @$file)
            DOCUMENTID=$(echo $RESPONSE | jq -r '.id')
            curl -s -k -X POST -H "Authorization: Bearer $ACCESS_TOKEN" "https://${{ secrets.F5_ADDRESS }}/api/v1/spaces/default/appsvcs/documents/$DOCUMENTID/deployments" -H "Content-Type: application/json" -d '{"target": "172.16.10.100"}'  # Fixed the curl command
            echo "DOCUMENTID for $file = $DOCUMENTID"
          done
